#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <DHT.h>

// Cập nhật địa chỉ I2C tìm được
LiquidCrystal_I2C lcd(0x27, 16, 2);  // Thay 0x27 bằng địa chỉ I2C thực tế

#define DHTPIN 2
#define DHTTYPE DHT21
DHT dht(DHTPIN, DHTTYPE);

#define MQ135_PIN A0
#define MQ7_PIN A1
#define MQ2_PIN A2

#define BUZZER_PIN 8  // Chân số điều khiển còi

const int MQ2_THRESHOLD = 700;  // Ngưỡng để còi kêu, điều chỉnh tùy thuộc vào yêu cầu

unsigned long previousMillis = 0;  // Lưu thời gian lần cập nhật cuối cùng
const long interval = 2000;  // Thời gian cập nhật giữa các thông số (2 giây)
int displayIndex = 0;  // Chỉ số để theo dõi cảm biến nào sẽ được hiển thị

void setup() {
  lcd.init();  // Khởi tạo LCD
  lcd.backlight();

  dht.begin();
  Serial.begin(9600);
  pinMode(BUZZER_PIN, OUTPUT);  // Thiết lập chân điều khiển còi là OUTPUT
  digitalWrite(BUZZER_PIN, LOW);  // Tắt còi ban đầu
}

void loop() {
  unsigned long currentMillis = millis();
  
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    
    // Đọc giá trị từ cảm biến DHT21
    float h = dht.readHumidity();
    float t = dht.readTemperature();
    
    // Kiểm tra xem giá trị đọc có hợp lệ không
    if (isnan(h) || isnan(t)) {
      Serial.println("Lỗi: Không đọc được dữ liệu từ cảm biến DHT!");
      return;
    }
    
    // Đọc giá trị từ các cảm biến MQ
    int mq135Value = analogRead(MQ135_PIN);
    int mq7Value = analogRead(MQ7_PIN);
    int mq2Value = analogRead(MQ2_PIN);
    
    // Kiểm tra giá trị MQ135 để điều khiển còi
    if (mq2Value > MQ2_THRESHOLD) {
      digitalWrite(BUZZER_PIN, HIGH);  // Bật còi
    } else {
      digitalWrite(BUZZER_PIN, LOW);  // Tắt còi
    }
    
    lcd.clear();
    
    switch (displayIndex) {
      case 0:
        lcd.setCursor(0, 0);
        lcd.print("nhiet do: ");
        lcd.print(t);
        lcd.print(" C");
        
        lcd.setCursor(0, 1);
        lcd.print("do am: ");
        lcd.print(h);
        lcd.print(" %");
        
        Serial.print("nhiet do: ");
        Serial.print(t);
        Serial.print(" C ");
        Serial.print("do am: ");
        Serial.print(h);
        Serial.println(" % ");
        break;
      case 1:
        lcd.setCursor(0, 0);
        lcd.print("MQ135: ");
        lcd.print(mq135Value);
        
        Serial.print("MQ135: ");
        Serial.println(mq135Value);
        break;
      case 2:
        lcd.setCursor(0, 0);
        lcd.print("MQ7: ");
        lcd.print(mq7Value);
        
        Serial.print("MQ7: ");
        Serial.println(mq7Value);
        break;
      case 3:
        lcd.setCursor(0, 0);
        lcd.print("MQ2: ");
        lcd.print(mq2Value);
        
        Serial.print("MQ2: ");
        Serial.println(mq2Value);
        break;
    }
    
    displayIndex++;
    if (displayIndex > 3) {
      displayIndex = 0;
    }
  }
}
